P1:

A problem:
Given T Test cases and in each test case a number N. prints it factorial for each test cases %M where M = 10^9 + 7
contr: 1<=T<=10^5
contr: 1<=N<=10^5
#include<bits/stdc++.h>
using namespace std;
const int M = 1e9+7;
int main(){
int t;
cin>>t;
while(t--){
  int n;
  cin>>n;
  long long fact = 1;
for(int i = 2; i<=n; ++i){
  fact = (fact*i)%M;
}
cout<<fact<<endl;
}
}


It will give TLE beacuse - O(T*N) = 10^10 >1 sec
Solution: Pre Compute the values

#include<bits/stdc++.h>
using namespace std;
const int M = 1e9+7;
const int N = 1e5+10;
long long fact[N];

int main(){
fact[0] = fact[1]=1;
for(int i = 2; i<N; ++i){
  fact[i]= fact[i-1]*i;
}

int t;
cin>>t;
while(t--){
  int n;
  cin>>n;
  long long fact = 1;

cout<<fact[n]<<endl;
}
}

// O(T) + O(N) = 10^5 = wil run in 1 sec.

/* Given  array a of N integers. Given Q quesries and in each query given a number X,
 print count of that number in array
Constraints:
1<=N<=10^5
1<=a[i]<=10^7
1<=Q<=10^5
=>
#include<bits/stdc++.h>
using namespace std;
int main(){
int n;
cin>>n;
int a[n];
for(int i = 0; i<n; i++){
cin>>a[i];
}
int q;
cin>>q;
while(q--){
  int x;
  cin>>x;
  int ct=0;
  for(int i =0; i<n; ++i){
  if(a[i]==x){
    ct++;
  }
  }
  cout<<ct<<endl;
}
}

=>  But it will give TLE
Sol: Use Hash Array

#include<bits/stdc++.h>
using namespace std;
const int N = 1e7+10;
int hsh[N];

int main(){
int n;
cin>>n;
int a[n];
for(int i = 0; i<n; i++){
cin>>a[i];
hsh[a[i]]++;
}
int q;
cin>>q;
while(q--){
  int x;
  cin>>x;
  cout<<hsh[x]<<endl;
}
}






